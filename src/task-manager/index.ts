// Система управління завданнями
// Система управління завданнями призначена для організації, призначення та відстеження завдань. Система повинна підтримувати різні типи завдань, управління пріоритетами та статусами, функціонал для призначення завдань співробітникам, фільтрації та сортування, а також надавати можливості управління співробітниками.
//
//     Основні сутності:
//     Завдання (DRAFT):
//
// Тип: Історія (Story), Баг (Bug), Завдання (DRAFT)
// ID завдання (унікальний ідентифікатор)
// Назва
// Опис
// Тип завдання
// Пріоритет: Високий, Середній, Низький
// Статус: Нове, В роботі, Виконане, Відкладене
// Дата створення
// Термін виконання
// Призначений співробітник (посилання на сутність Співробітник)
// Співробітник (Employee):
//
// ID співробітника (унікальний ідентифікатор)
// Ім'я
// Посада
// Список завдань
// Функціональні вимоги:
//     Управління завданнями:
//
//     Створення, редагування, видалення та перегляд завдань
// Призначення завдань співробітникам
// Оновлення статусів завдань
// Фільтрація та сортування:
//
//     Фільтрація завдань за типом, пріоритетом, статусом, терміном виконання та призначеним співробітником (можна вибрати декілька полів одразу)
// Сортування завдань за датою створення, терміном виконання, пріоритетом. Реалізація різних алгоритмів сортування (наприклад, бульбашкове сортування, сортування вибором)
// Функції управління співробітниками:
//
//     Додавання співробітників: Реєстрація нових співробітників в системі з ука занням їх імені та посади
// Видалення співробітників: Видалення співробітників з системи, при цьому необхідно враховувати, що співробітник може бути призначений на виконання одного або декількох завдань
// Зміна посади співробітника: Оновлення інформації про посаду співробітника відповідно до змін в його кар'єрі або областях відповідальності
// Реалізація паттернів проектування:
//     Реалізація системи повідомлень про зміну статусів завдань
// Підтримка різних стратегій сортування та фільтрації завдань
// Розробка системи логування для відстеження помилок
// * Розглянути можливість реалізації функції "Відкат змін" для завдань, що дозволяє повертати задачу в попередній стан
// Зверніть увагу:
//
//     Неможливість зміни статусу завдання без призначеного співробітника: Запобігання зміні статусу завдань на "В роботі" або "Виконане", якщо на задачу не призначений співробітник.
//     Видалення співробітників з активними завданнями: Запобігання видаленню співробітників, на яких призначені не завершені завдання
// Перепризначення завдань: В випадку видалення співробітника з системи або зміни його посади, надати можливість автоматичного або ручного перепризначення його завдань іншим співробітникам
// Безпека та доступ до даних: Реалізація системи прав та ролей для доступу до завдань та управління ними, щоб обмежити можливість зміни або видалення співробітниками, не являючимися адміністраторами.
//     Аудит та логування дій: Ведення журналу (лога) змін для відстеження того, хто, коли і які зміни вносив в дані про завдання та співробітників. Це допоможе в аналізі інцидентів та відновленні інформації.
//     Технічні вимоги:
//     Код повинен бути структурований і модульним, з чітким розподілом логіки управління даними, бізнес-логіки та інтерфейсу.
//     Повинні бути реалізовані юніт-тести для.
//     Здача проекту:
//     Документація до проекту, включаючи опис архітектури у вигляді діаграми, використаних паттернів проектування.


import {TaskManager} from "./TaskManager";
import {NotificationService} from "./services/NotificationService";
import {ConsoleNotification} from "./utils/Notification/ConsoleNotification";


const notificationService = new NotificationService();
notificationService.addNotifier(new ConsoleNotification());

const taskManager = new TaskManager(notificationService);
